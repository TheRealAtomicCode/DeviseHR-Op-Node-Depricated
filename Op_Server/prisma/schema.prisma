generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model companies {
  id                                           Int      @id @default(autoincrement())
  name                                         String   @db.VarChar(60)
  licence_number                               String   @db.VarChar(255)
  logo                                         String?
  enable_semi_personal_information             Boolean  @default(false)
  enable_show_employees                        Boolean  @default(false)
  enable_toil                                  Boolean  @default(false)
  enable_overtime                              Boolean  @default(false)
  enable_absence_conflicts_outside_departments Boolean  @default(false)
  enable_carryover                             Boolean  @default(false)
  enable_self_cancel_leave_requests            Boolean  @default(false)
  enable_edit_my_information                   Boolean  @default(false)
  enable_accept_decline_shifts                 Boolean  @default(false)
  enable_takeover_shift                        Boolean  @default(false)
  enable_broadcast_shift_swap                  Boolean  @default(false)
  lang                                         String?  @db.VarChar(5)
  country                                      String?  @db.VarChar(5)
  main_contact_id                              Int?
  created_at                                   DateTime @default(now()) @db.Timestamp(6)
  updated_at                                   DateTime @default(now()) @db.Timestamp(6)
  is_special_client                            Boolean  @default(false)
  users                                        users[]
}

model notes {
  id          Int        @id @default(autoincrement())
  operatorid  Int?
  companyid   Int?
  notecontent String?
  createdat   DateTime   @default(now()) @db.Timestamp(6)
  operators   operators? @relation(fields: [operatorid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model operators {
  id               Int            @id @default(autoincrement())
  first_name       String         @db.VarChar(20)
  last_name        String         @db.VarChar(20)
  email            String         @unique @db.VarChar(60)
  password_hash    String?        @db.VarChar(60)
  profile_picture  String?
  is_terminated    Boolean        @default(false)
  is_verified      Boolean        @default(false)
  user_role        user_role_enum
  created_at       DateTime       @default(now()) @db.Timestamp(6)
  updated_at       DateTime       @default(now()) @db.Timestamp(6)
  refresh_tokens   String[]       @default([])
  added_by         Int
  verfication_code String?        @db.VarChar(10)
  login_attempt    Int?           @default(0) @db.SmallInt
  last_login_time  DateTime?      @db.Timestamp(6)
  last_active_time DateTime?      @db.Timestamp(6)
  notes            notes[]
}

model users {
  id                                         Int        @id @default(autoincrement())
  first_name                                 String     @db.VarChar(20)
  last_name                                  String     @db.VarChar(20)
  title                                      String?    @db.VarChar(20)
  email                                      String     @unique @db.VarChar(60)
  password_hash                              String?    @db.VarChar(60)
  date_of_birth                              DateTime?  @db.Date
  profile_picture                            String?
  is_terminated                              Boolean    @default(false)
  is_verified                                Boolean    @default(false)
  created_at                                 DateTime   @default(now()) @db.Timestamp(6)
  updated_at                                 DateTime   @default(now()) @db.Timestamp(6)
  refresh_tokens                             String[]   @default([])
  user_type                                  Int?
  ni_no                                      String?    @db.VarChar(60)
  drivers_licence_number                     String?    @db.VarChar(60)
  drivers_licence_expiration_date            DateTime?  @db.Date
  passport_number                            String?    @db.VarChar(60)
  passport_expiration_date                   DateTime?  @db.Date
  enable_reminders                           Boolean    @default(false)
  enable_birthday_reminder                   Boolean    @default(false)
  enable_receive_requests                    Boolean    @default(false)
  enable_receive_requests_from_my_department Boolean    @default(false)
  contracted_leave_start_date                DateTime?  @db.Date
  added_by                                   Int
  verification_code                          String?    @db.VarChar(10)
  login_attempt                              Int?       @default(0) @db.SmallInt
  last_login_time                            DateTime?  @db.Timestamp(6)
  last_active_time                           DateTime?  @db.Timestamp(6)
  company_id                                 Int?
  companies                                  companies? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum user_role_enum {
  root
  sudo
  admin
  manager
  employee
}
